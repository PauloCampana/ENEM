[
  {
    "objectID": "1-limpeza.html",
    "href": "1-limpeza.html",
    "title": "\n1  Limpeza de dados\n",
    "section": "",
    "text": "library(tidyverse)\n\n\nmicrodados <- \"dados/microdados.csv\" |>\n    vroom::vroom(\n        locale = locale(encoding = \"ISO-8859-1\"),\n        show_col_types = FALSE\n    ) |> \n    select(\n        inscrição      = NU_INSCRICAO,\n        região         = CO_MUNICIPIO_PROVA, \n        estado         = SG_UF_PROVA, \n        município      = NO_MUNICIPIO_PROVA,\n        idade          = TP_FAIXA_ETARIA,\n        sexo           = TP_SEXO, \n        estado_civil   = TP_ESTADO_CIVIL,\n        cor            = TP_COR_RACA,\n        nacionalidade  = TP_NACIONALIDADE,\n        situação_médio = TP_ST_CONCLUSAO,\n        renda          = Q006, \n        internet       = Q025,\n        MT             = NU_NOTA_MT, \n        CN             = NU_NOTA_CN, \n        CH             = NU_NOTA_CH, \n        LC             = NU_NOTA_LC,\n        R              = NU_NOTA_REDACAO, \n        R1             = NU_NOTA_COMP1,\n        R2             = NU_NOTA_COMP2,\n        R3             = NU_NOTA_COMP3, \n        R4             = NU_NOTA_COMP4, \n        R5             = NU_NOTA_COMP5\n    ) |> \n    filter(if_all(\n        MT:R, function(x) !is.na(x)\n    )) |> \n    mutate(\n        região = (região %/% 1e6) |> case_match(\n            1 ~ \"Norte\",\n            2 ~ \"Nordeste\",\n            3 ~ \"Sudeste\",\n            4 ~ \"Sul\",\n            5 ~ \"Centro-Oeste\"\n        ) |> as.factor(),\n        id = estado |> case_match(\n            \"RO\" ~ \"1\",\n            \"AC\" ~ \"2\",\n            \"AM\" ~ \"3\",\n            \"RR\" ~ \"4\",\n            \"PA\" ~ \"5\",\n            \"AP\" ~ \"6\",\n            \"TO\" ~ \"7\",\n            \"MA\" ~ \"8\",\n            \"PI\" ~ \"9\",\n            \"CE\" ~ \"10\",\n            \"RN\" ~ \"11\",\n            \"PB\" ~ \"12\",\n            \"PE\" ~ \"13\",\n            \"AL\" ~ \"14\",\n            \"SE\" ~ \"15\",\n            \"BA\" ~ \"16\",\n            \"MG\" ~ \"17\",\n            \"ES\" ~ \"18\",\n            \"RJ\" ~ \"19\",\n            \"SP\" ~ \"20\",\n            \"PR\" ~ \"21\",\n            \"SC\" ~ \"22\",\n            \"RS\" ~ \"23\",\n            \"MS\" ~ \"24\",\n            \"MT\" ~ \"25\",\n            \"GO\" ~ \"26\",\n            \"DF\" ~ \"27\"\n        ),\n        estado = estado |> recode_factor(\n            \"RO\" = \"Rondônia\",\n            \"AC\" = \"Acre\",   \n            \"AM\" = \"Amazonas\",\n            \"RR\" = \"Roraima\",\n            \"PA\" = \"Pará\",\n            \"AP\" = \"Amapá\",\n            \"TO\" = \"Tocantins\",\n            \"MA\" = \"Maranhão\",\n            \"PI\" = \"Piauí\",     \n            \"CE\" = \"Ceará\",\n            \"RN\" = \"Rio Grande do Norte\",\n            \"PB\" = \"Paraíba\", \n            \"PE\" = \"Pernambuco\",\n            \"AL\" = \"Alagoas\", \n            \"SE\" = \"Sergipe\",\n            \"BA\" = \"Bahia\",\n            \"MG\" = \"Minas Gerais\",\n            \"ES\" = \"Espírito Santo\",  \n            \"RJ\" = \"Rio de Janeiro\",\n            \"SP\" = \"São Paulo\",\n            \"PR\" = \"Paraná\",         \n            \"SC\" = \"Santa Catarina\",\n            \"RS\" = \"Rio Grande do Sul\",\n            \"MS\" = \"Mato Grosso do Sul\",\n            \"MT\" = \"Mato Grosso\",     \n            \"GO\" = \"Goiás\",\n            \"DF\" = \"Distrito Federal\",\n            .ordered = TRUE\n        ),\n        idade = idade |> case_match(\n            1  ~ \"0-17\", \n            2  ~ \"17\",\n            3  ~ \"18\",  \n            4  ~ \"19\",\n            5  ~ \"20\",  \n            6  ~ \"21\",   \n            7  ~ \"22\",  \n            8  ~ \"23\",\n            9  ~ \"24\",  \n            10 ~ \"25\", \n            11 ~ \"26-30\", \n            12 ~ \"31-35\",\n            13 ~ \"36-40\", \n            14 ~ \"41-45\", \n            15 ~ \"46-50\", \n            16 ~ \"51-55\",\n            17 ~ \"56-60\",\n            18 ~ \"61-65\", \n            19 ~ \"66-70\", \n            20 ~ \"70+\"\n        ) |> as.ordered(),\n        sexo = sexo |> case_match(\n            \"F\" ~ \"Feminino\",\n            \"M\" ~ \"Masculino\" \n        ) |> as.factor(),\n        estado_civil = estado_civil |> case_match(\n            0 ~ NA,\n            1 ~ \"Solteiro\",\n            2 ~ \"Casado\",\n            3 ~ \"Divorciado\",\n            4 ~ \"Viúvo\"\n        ) |> as.factor(),\n        cor = cor |> case_match(\n            0 ~ NA, \n            1 ~ \"Branca\",\n            2 ~ \"Preta\",\n            3 ~ \"Parda\",\n            4 ~ \"Amarela\",\n            5 ~ \"Indígena\",\n            6 ~ NA\n        ) |> as.factor(),\n        nacionalidade = nacionalidade |> case_match(\n            0 ~ NA,\n            1 ~ \"Brasileiro\",\n            2 ~ \"Brasileiro naturalizado\",\n            3 ~ \"Estrangeiro\",\n            4 ~ \"Brasileiro nascido no exterior\" \n        ) |> as.factor(),\n        situação_médio = situação_médio |> case_match(\n            1 ~ \"Concluído\", \n            2 ~ \"Será concluído em 2021\",\n            3 ~ \"Será concluído após 2021\",  \n            4 ~ \"Não concluíu\"\n        ) |> as.factor(),\n        renda = renda |> recode_factor(\n            \"A\" = \"0\",           \n            \"B\" = \"0-1100\",     \n            \"C\" = \"1100-1650\",\n            \"D\" = \"1650-2200\",   \n            \"E\" = \"2200-2750\",   \n            \"F\" = \"2750-3300\",\n            \"G\" = \"3300-4400\",  \n            \"H\" = \"4400-5500\", \n            \"I\" = \"5500-6600\",\n            \"J\" = \"6600-7700\",   \n            \"K\" = \"7700-8800\",   \n            \"L\" = \"8800-9900\",\n            \"M\" = \"9900-11000\",  \n            \"N\" = \"11000-13200\", \n            \"O\" = \"13200-16500\",\n            \"P\" = \"16500-22000\",\n            \"Q\" = \"22000+\",\n            .ordered = TRUE\n        ),\n        internet = internet |> case_match(\n            \"A\" ~ \"Não\",\n            \"B\" ~ \"Sim\" \n        ) |> as.factor()\n    )\n\n\nmicrodados |>  \n    arrow::write_dataset(\n        path = \"dados\",\n        format = \"parquet\",\n        basename_template = \"microdados{i}.parquet\"\n    )"
  },
  {
    "objectID": "2-análise-exploratória.html",
    "href": "2-análise-exploratória.html",
    "title": "\n2  Análise exploratória de dados\n",
    "section": "",
    "text": "library(tidyverse)\nlibrary(reactablefmtr)\n\n\nmicrodados <- \"dados/microdados0.parquet\" |>\n    arrow::open_dataset() |>\n    collect()\n\n\ntheme_darkly <- function() {\n    theme(\n        rect             = element_blank(),\n        plot.background  = element_rect(fill = \"#21252b\", linewidth = 0),\n        panel.grid.major = element_line(colour = \"#282c34\"),\n        panel.grid.minor = element_blank(),\n        text             = element_text(colour = \"#ffffff\", size = 12),\n        axis.text        = element_text(colour = \"#ffffff\", size = 10),\n        strip.text       = element_text(colour = \"#ffffff\", size = 12),\n        strip.placement  = \"outside\"\n    )\n}\n\ntheme_darkly_table <- reactableTheme(\n    color = \"#ffffff\",\n    backgroundColor = \"#21252b\",\n    borderColor = \"#282c34\"\n)\n\n\nmicrodados |> \n    select(sexo, MT:R) |>\n    pivot_longer(MT:R, names_to = \"área\", values_to = \"notas\") |> \n    ggplot(aes(x = notas, fill = sexo, colour = sexo)) +\n    geom_density(alpha = 1/3) +\n    facet_grid(rows = vars(área), switch = \"y\") +\n    scale_colour_manual(\n        values = c(\"#ff4080\", \"#4080ff\"),\n        aesthetics = c(\"fill\", \"colour\")\n    ) +\n    scale_x_continuous(breaks = seq(0, 1000, by = 100)) +\n    labs(x = \"Notas\") +\n    guides(\n        fill = guide_legend(title = \"Sexo\"),\n        colour = guide_legend(title = \"Sexo\")\n    ) +\n    theme_darkly() +\n    theme(\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank()\n    )\n\n\n\n\n\nmicrodados |> \n    filter(R != 0) |>\n    select(idade, MT:R) |> \n    mutate(notas = (MT + CN + CH + LC + R) / 5) |>\n    ggplot(aes(x = notas, y = idade, colour = idade)) +\n    ggridges::geom_density_ridges(scale = 4, alpha = 0) + \n    scale_colour_viridis_d(option = \"F\", begin = 0.3) +\n    xlim(300, 800) +\n    labs(x = \"Notas\", y = \"Idade\") +\n    theme_darkly() +\n    theme(legend.position = \"none\")\n\n\n\n\n\nmicrodados |>\n    filter(R != 0, !is.na(renda)) |>\n    select(renda, MT:R) |>\n    mutate(notas = (MT + CN + CH + LC + R) / 5) |>\n    ggplot(aes(x = notas, y = renda, colour = renda)) +\n    ggridges::geom_density_ridges(scale = 4, alpha = 0) +\n    scale_colour_viridis_d(option = \"G\", begin = 0.4, direction = -1) +\n    xlim(300, 800) +\n    labs(x = \"Notas\", y = \"Renda\") +\n    theme_darkly() +\n    theme(legend.position = \"none\")\n\n\n\n\n\nmicrodados |> \n    select(internet, MT:R) |>\n    filter(!is.na(internet)) |> \n    pivot_longer(MT:R, names_to = \"área\", values_to = \"notas\") |>\n    ggplot(aes(x = notas, fill = internet, colour = internet)) +\n    geom_density(alpha = 1/3) +\n    facet_grid(rows = vars(área), switch = \"y\") +\n    scale_colour_manual(\n        values = c(\"#ff8080\", \"#80ff80\"),\n        aesthetics = c(\"fill\", \"colour\")\n    ) +\n    scale_x_continuous(breaks = seq(0, 1000, by = 100)) +\n    labs(x = \"Notas\") +\n    guides(\n        fill = guide_legend(title = \"Internet\"),\n        colour = guide_legend(title = \"Internet\")\n    ) +\n    theme_darkly() +\n    theme(\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank()\n    )\n\n\n\n\n\n\"dados/brasilgeo.json\" |> \n    geojsonio::geojson_read(what = \"sp\") |> \n    broom::tidy() |> \n    left_join(\n        microdados |> \n            summarise(across(MT:R, mean), .by = id) |> \n            pivot_longer(MT:R, names_to = \"área\", values_to = \"notas\"),\n        join_by(id),\n        relationship = \"many-to-many\"\n    ) |> \n    ggplot(aes(x = long, y = lat, group = group, fill = notas)) +\n    geom_polygon(colour = \"#000000\", linewidth = 0.1) +\n    scale_fill_viridis_c() +\n    facet_grid(cols = vars(área), switch = \"y\") +\n    guides(fill = guide_colourbar(title = \"Notas\", ticks = FALSE)) +\n    theme_darkly() +\n    theme(\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        panel.grid.major = element_blank()\n    )\n\n\n\n\n\n\"dados/brasilgeo.json\" |> \n    geojsonio::geojson_read(what = \"sp\") |> \n    broom::tidy() |> \n    left_join(\n        microdados |> \n            summarise(\n               notas = mean(c(MT, CN, CH, LC, R)),\n               .by = id\n            ),\n        join_by(id)\n    ) |> \n    ggplot(aes(x = long, y = lat, group = group, fill = notas)) +\n    geom_polygon(colour = \"#000000\", linewidth = 0.2) +\n    scale_fill_viridis_c(begin = 0.1) +\n    guides(fill = guide_colourbar(title = \"Notas\", ticks = FALSE)) +\n    theme_darkly() +\n    theme(\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        panel.grid.major = element_blank()\n    )\n\n\n\n\n\ncol_def_data_bars <- function(data, column, colour) {\n    colDef(\n        cell = data_bars(\n            data = data,\n            text_position = \"above\", text_color = \"#ffffff\",\n            background = \"#282c34\", fill_color = colour,\n            min_value = min(data[column]) - 10,\n    ))\n}\n\n\nmicrodados |>\n    select(região, estado, MT:R) |>\n    summarise(\n        across(MT:R, function(x) round(mean(x))),\n        .by = c(região, estado)\n    ) %>%\n    reactable(\n        pagination = FALSE, compact = TRUE, \n        bordered = TRUE, highlight = TRUE, \n        showSortable = TRUE,\n        defaultSortOrder = \"desc\", defaultSorted = \"MT\",\n        theme = theme_darkly_table,\n        defaultColDef = colDef(align = \"left\"),\n        columns = list(\n            \"região\" = colDef(name = \"Região\"),\n            \"estado\" = colDef(name = \"Estado\", width = 180),\n            \"MT\" = col_def_data_bars(., \"MT\", \"#80c0f0\"),\n            \"CN\" = col_def_data_bars(., \"CN\", \"#a0f0a0\"),\n            \"CH\" = col_def_data_bars(., \"CH\", \"#f0c080\"),\n            \"LC\" = col_def_data_bars(., \"LC\", \"#f080c0\"),\n            \"R\"  = col_def_data_bars(., \"R\",  \"#f0a0a0\")\n        )\n    )\n\n\n\n\n\n\nestado civil cor nacionalidade situação_médio"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ENEM",
    "section": "",
    "text": "Prefácio\nkek"
  }
]